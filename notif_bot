import urllib.request
import json
import time
import requests
import hashlib

prometheus_url = 'http://127.0.0.1:9090'
bot_token = "8057975296:AAHpTYrdxeRSBoYHvDSLCZnMWsLsDdNL0oM"
bot_chatID = "1762114550"
last_message_id = None

def tg_bot(bot_message):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ id. """
    send_text = f"https://api.telegram.org/bot{bot_token}/sendMessage?chat_id={bot_chatID}&parse_mode=HTML&text={bot_message}"
    response = requests.get(send_text)
    result = response.json()
    if result['ok']:
        return result['result']['message_id']
    else:
        raise ValueError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")

def delete_last_message(message_id):
    """ –£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. """
    del_url = f"https://api.telegram.org/bot{bot_token}/deleteMessage?chat_id={bot_chatID}&message_id={message_id}"
    requests.post(del_url)

#def tg_bot(bot_message):
#    send_text = "https://api.telegram.org/bot" + bot_token + "/sendMessage?chat_id=" + bot_chatID + "&parse_mode=HTML&text=" + bot_message
#    response = requests.get(send_text)
#    return response.json()

def get_data(api):
    with urllib.request.urlopen(prometheus_url + '/api/v1/' + api) as url:
        data = json.load(url)
    return data

def get_alerts_message():
    data = get_data('alerts')
    msg = '<b>–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:</b>\n'
    if data['data']['alerts']:
        for alert in data['data']['alerts']:
            msg += f'\n=====================================\n' \
                   f'<b>‚ö† –ü—Ä–æ–±–ª–µ–º–∞:</b> {alert["labels"].get("alertname")}\n' \
                   f'<b>üíª –ú–∞—à–∏–Ω–∞:</b> {alert["labels"].get("instance")}\n' \
                   f'<b>üî¥ –°—Ç–∞—Ç—É—Å: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π - </b>{alert["state"]}\n' \
                   f'<b>‚Ñπ –û–ø–∏—Å–∞–Ω–∏–µ:</b> {alert["annotations"].get("description")}\n' \
                   f'\n<b>‚è≥ –í—Ä–µ–º—è:</b> {alert["activeAt"]}\n' \
                   f'=====================================\n'
    else:
        msg += f'\n<b>–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ</b>\n' \
               f'‚òï –£ –≤–∞—Å –µ—Å—Ç—å –≤—Ä–µ–º—è –ø–æ–ø–∏—Ç—å –∫–æ—Ñ–µ\n'
    return msg

last_alerts = None

while True:
    try:
        current_alerts_msg = get_alerts_message()
        current_alerts = current_alerts_msg
        if last_alerts is None or current_alerts != last_alerts:
            new_message_id = tg_bot(current_alerts_msg)
#            time.sleep(1)
            if last_message_id is not None:
                delete_last_message(last_message_id)
            last_message_id = new_message_id
            last_alerts = current_alerts
        time.sleep(5)

    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Prometheus: {e}')
        time.sleep(30)
