---
- name: Установка зависимостей
  apt:
    name:
      - python3-pip
      - python3-dev
      - postgresql-{{ postgres_version }}
      - postgresql-server-dev-{{ postgres_version }}
      - libpq-dev  # Required for psycopg2
    state: present
    update_cache: yes

- name: Установка Patroni с зависимостями pip
  pip:
    name: psycopg2-binary
    name: patroni[etcd]
    executable: pip3
    extra_args: --break-system-packages    

- name: Создание директории Patroni
  file:
    path: /etc/patroni
    state: directory
    owner: postgres
    group: postgres
    mode: '0750'

- name: Конфигурация Patroni под etcd
  template:
    src: patroni.yml.j2
    dest: /etc/patroni.yml
    owner: postgres
    group: postgres
    mode: '0640'
  vars:
    etcd_config:
      hosts: "10.10.10.1:2379,10.10.10.2:2379,10.10.10.3:2379"
      protocol: "http"
      api_version: v3
      use_proxies: false
      retry_timeout: 10
      timeout: 10
      
- name: Создание systemd службы под Patroni
  template:
    src: patroni.service.j2
    dest: /etc/systemd/system/patroni.service
    owner: root
    group: root
    mode: '0644'

- name: Проверка создания директории PostgreSQL
  file:
    path: "{{ postgres_data_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Проверка разрешений PostgreSQL
  file:
    path: /var/lib/postgresql/{{ postgres_version }}/main
    owner: postgres
    group: postgres
    mode: '0777'
    recurse: yes

- name: Перезагрузка systemd
  systemd:
    daemon_reload: yes

- name: Проверка etcd подключения с нод
  command: etcdctl --endpoints=http://10.10.10.1:2379,http://10.10.10.2:2379,http://10.10.10.3:2379 endpoint health
  environment:
    ETCDCTL_API: "3"
  register: etcd_health
  changed_when: false
  failed_when: "'healthy' not in etcd_health.stderr"

- name: Подключение и запуск Patroni
  systemd:
    name: patroni
    state: started
    enabled: yes

- name: Проверка запуска Patroni сервиса
  systemd:
    name: patroni
    state: started
    enabled: yes
  register: patroni_service
  until: patroni_service is succeeded
  retries: 5
  delay: 10

- name: Проверка процесса Patroni
  shell: pgrep -f "patroni /etc/patroni.yml"
  register: patroni_process
  changed_when: false
  failed_when: patroni_process.rc != 0

- name: Вывод логов Patroni если запуск не удался
  shell: journalctl -u patroni -n 50 --no-pager
  when: patroni_process.rc != 0
  register: patroni_logs
  changed_when: false

- name: Отображение логов Patroni
  debug:
    var: patroni_logs.stdout
  when: patroni_logs is defined

- name: Ожидание Patroni API
  wait_for:
    host: "{{ ansible_host }}"
    port: 8008
    delay: 10
    timeout: 120
  when: patroni_process.rc == 0
- name: Verify cluster status
  command: patronictl -c /etc/patroni.yml list
  register: patroni_status
  changed_when: false

- name: Отображение статуса кластера
  debug:
    var: patroni_status.stdout_lines

